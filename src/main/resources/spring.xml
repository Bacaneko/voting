<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/security
       https://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd">

    <context:component-scan base-package="ru.bacaneco.voting.repository"/>
    <context:component-scan base-package="ru.bacaneco.voting"/>

    <!-- Enable scheduling feature for midnight cache clearing-->
    <task:annotation-driven/>

    <!-- Spring Data JPA -->
    <jpa:repositories base-package="ru.bacaneco.voting.repository"/>

    <!-- Spring Web MVC -->
    <context:component-scan base-package="ru.bacaneco.voting.controller"/>

    <bean class="ru.bacaneco.voting.controller.json.JacksonObjectMapper" id="objectMapper"
          factory-method="getMapper"/>

    <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean" id="conversionService">
        <property name="formatters">
            <set>
                <bean class="ru.bacaneco.voting.controller.converter.LocalDateFormatter"/>
            </set>
        </property>
    </bean>

    <mvc:annotation-driven conversion-service="conversionService">

        <!-- Adds customized ObjectMapper to Spring MVC -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" ref="objectMapper"/>
            </bean>
        </mvc:message-converters>

        <!-- Gives an access to @AuthenticatedPrincipal -->
        <mvc:argument-resolvers>
            <bean class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver "/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- Spring Security -->
    <bean class="org.springframework.security.crypto.factory.PasswordEncoderFactories" id="passwordEncoder"
          factory-method="createDelegatingPasswordEncoder"/>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="securityUserService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http create-session="stateless">
        <security:http-basic/>
        <security:intercept-url pattern="/restaurants/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/menus/todays" access="permitAll()"/>
        <security:intercept-url pattern="/menus/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/dishes/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/votes/filter" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/votes/todays" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/votes/**" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/profile/register" access="isAnonymous()"/>
        <security:intercept-url pattern="/profile/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/**" access="permitAll()"/>
        <security:csrf disabled="true"/>
    </security:http>

</beans>